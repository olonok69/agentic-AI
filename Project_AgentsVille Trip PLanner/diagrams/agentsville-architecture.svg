<?xml version="1.0" encoding="UTF-8"?>
<svg width="1080" height="760" viewBox="0 0 1080 760" fill="none" xmlns="http://www.w3.org/2000/svg">
  <style>
    .title { font: 700 22px Arial, sans-serif; fill: #0f172a; }
    .label { font: 600 14px Arial, sans-serif; fill: #0f172a; }
    .small { font: 12px Arial, sans-serif; fill: #334155; }
    .box { fill: #f8fafc; stroke: #94a3b8; stroke-width: 1.5; rx: 10; }
    .agent { fill: #eef2ff; stroke: #6366f1; stroke-width: 2; rx: 10; }
    .tool { fill: #ecfeff; stroke: #06b6d4; stroke-width: 1.5; rx: 8; }
    .api { fill: #f0fdf4; stroke: #22c55e; stroke-width: 1.5; rx: 8; }
    .eval { fill: #fff7ed; stroke: #f59e0b; stroke-width: 1.5; rx: 8; }
    .arrow { stroke: #475569; stroke-width: 1.5; marker-end: url(#arrowhead); }
  </style>
  
  <defs>
    <marker id="arrowhead" markerWidth="10" markerHeight="7" refX="10" refY="3.5" orient="auto">
      <polygon points="0 0, 10 3.5, 0 7" fill="#475569" />
    </marker>
  </defs>

  <text x="30" y="40" class="title">AgentsVille Trip Planner — Architecture</text>

  <!-- Inputs -->
  <rect x="30" y="70" width="260" height="110" class="box" />
  <text x="45" y="95" class="label">Inputs</text>
  <text x="45" y="120" class="small">VacationInfo (travelers, interests, dates, budget)</text>
  <text x="45" y="140" class="small">Environment (.env: OPENAI_API_KEY, base URL)</text>

  <!-- Mocked APIs -->
  <rect x="30" y="210" width="260" height="150" class="api" />
  <text x="45" y="235" class="label">Mocked APIs (project_lib)</text>
  <text x="45" y="260" class="small">call_weather_api_mocked(date, city)</text>
  <text x="45" y="280" class="small">call_activities_api_mocked(date, city)</text>
  <text x="45" y="300" class="small">call_activity_by_id_api_mocked(id)</text>

  <!-- Itinerary Agent -->
  <rect x="340" y="70" width="330" height="190" class="agent" />
  <text x="355" y="95" class="label">ItineraryAgent (CoT)</text>
  <text x="355" y="120" class="small">System prompt includes:</text>
  <text x="375" y="140" class="small">• Role/Task + ANALYSIS/FINAL OUTPUT</text>
  <text x="375" y="160" class="small">• TravelPlan Pydantic JSON Schema</text>
  <text x="375" y="180" class="small">• WeatherForDates + ActivitiesForDates</text>

  <!-- TravelPlan output -->
  <rect x="720" y="90" width="320" height="150" class="box" />
  <text x="735" y="115" class="label">TravelPlan (Pydantic)</text>
  <text x="735" y="140" class="small">city, start_date, end_date, total_cost</text>
  <text x="735" y="160" class="small">itinerary_days[ItineraryDay{weather, activities}]</text>

  <!-- Evals -->
  <rect x="340" y="300" width="330" height="210" class="eval" />
  <text x="355" y="325" class="label">Evaluations (Evals)</text>
  <text x="355" y="350" class="small">• Dates match arrival/departure</text>
  <text x="355" y="370" class="small">• Total cost accuracy and budget</text>
  <text x="355" y="390" class="small">• No hallucinated activities (ID check)</text>
  <text x="355" y="410" class="small">• Interests coverage per traveler</text>
  <text x="355" y="430" class="small">• Weather compatibility (LLM)</text>

  <!-- Tools -->
  <rect x="720" y="270" width="320" height="180" class="tool" />
  <text x="735" y="295" class="label">Tools (for ReAct)</text>
  <text x="735" y="320" class="small">calculator_tool(expr)</text>
  <text x="735" y="340" class="small">get_activities_by_date_tool(date, city)</text>
  <text x="735" y="360" class="small">run_evals_tool(travel_plan)</text>
  <text x="735" y="380" class="small">final_answer_tool(final_output)</text>

  <!-- ItineraryRevisionAgent -->
  <rect x="340" y="540" width="330" height="170" class="agent" />
  <text x="355" y="565" class="label">ItineraryRevisionAgent (ReAct)</text>
  <text x="355" y="590" class="small">THOUGHT → ACTION(JSON tool call) → OBSERVATION</text>
  <text x="355" y="610" class="small">Requires passing evals before final_answer_tool</text>
  <text x="355" y="630" class="small">Feedback: two activities per day</text>

  <!-- Revised TravelPlan -->
  <rect x="720" y="520" width="320" height="120" class="box" />
  <text x="735" y="545" class="label">Revised TravelPlan</text>
  <text x="735" y="570" class="small">All evals passed, feedback incorporated</text>

  <!-- Narration -->
  <rect x="720" y="660" width="320" height="70" class="box" />
  <text x="735" y="685" class="label">Narration</text>
  <text x="735" y="705" class="small">Optional narrative summary of the trip</text>

  <!-- Arrows -->
  <line x1="290" y1="125" x2="340" y2="125" class="arrow" />
  <line x1="290" y1="260" x2="340" y2="160" class="arrow" />
  <line x1="670" y1="165" x2="720" y2="165" class="arrow" />

  <line x1="290" y1="285" x2="340" y2="345" class="arrow" />
  <line x1="720" y1="360" x2="670" y2="405" class="arrow" />

  <line x1="670" y1="615" x2="720" y2="580" class="arrow" />
  <line x1="880" y1="640" x2="880" y2="660" class="arrow" />

  <!-- Loop indicators -->
  <path d="M 675 160 C 690 200, 690 230, 650 260" stroke="#64748b" stroke-width="1.2" fill="none" />
  <text x="600" y="255" class="small">If invalid → revise</text>
</svg>
